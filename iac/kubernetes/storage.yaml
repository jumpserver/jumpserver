apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jumpserver-database-pvc
  namespace: jumpserver
  labels:
    app.kubernetes.io/name: jumpserver
    app.kubernetes.io/instance: jumpserver
    app.kubernetes.io/component: database-storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd  # Adjust based on your cluster
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jumpserver-cache-pvc
  namespace: jumpserver
  labels:
    app.kubernetes.io/name: jumpserver
    app.kubernetes.io/instance: jumpserver
    app.kubernetes.io/component: cache-storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-ssd  # Adjust based on your cluster
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jumpserver-data-pvc
  namespace: jumpserver
  labels:
    app.kubernetes.io/name: jumpserver
    app.kubernetes.io/instance: jumpserver
    app.kubernetes.io/component: application-storage
spec:
  accessModes:
    - ReadWriteMany  # Allows multiple pods to access the same volume
  resources:
    requests:
      storage: 50Gi
  storageClassName: shared-storage  # Adjust based on your cluster (NFS, EFS, etc.)
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jumpserver-logs-pvc
  namespace: jumpserver
  labels:
    app.kubernetes.io/name: jumpserver
    app.kubernetes.io/instance: jumpserver
    app.kubernetes.io/component: logs-storage
spec:
  accessModes:
    - ReadWriteMany  # Allows multiple pods to access the same volume
  resources:
    requests:
      storage: 20Gi
  storageClassName: shared-storage  # Adjust based on your cluster

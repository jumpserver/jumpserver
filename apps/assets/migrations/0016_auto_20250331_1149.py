# Generated by Django 4.1.13 on 2025-03-31 02:49

import json

import django
from django.db import migrations, models

from assets.const.types import AllTypes


def add_ad_host_type(apps, schema_editor):
    data = """
     [
       {
          "created_by": "system",
          "updated_by": "system",
          "comment": "",
          "name": "Windows AD",
          "category": "ad",
          "type": "windows_ad",
          "meta": {},
          "internal": true,
          "domain_enabled": true,
          "su_enabled": false,
          "su_method": null,
          "custom_fields": [],
          "automation": {
              "ansible_enabled": true,
              "ansible_config": {
                  "ansible_shell_type": "cmd",
                  "ansible_connection": "ssh"
              },
              "ping_enabled": true,
              "ping_method": "ping_by_rdp",
              "ping_params": {},
              "gather_facts_enabled": true,
              "gather_facts_method": "gather_facts_windows",
              "gather_facts_params": {},
              "change_secret_enabled": true,
              "change_secret_method": "change_secret_ad_windows",
              "change_secret_params": {},
              "push_account_enabled": true,
              "push_account_method": "push_account_ad_windows",
              "push_account_params": {},
              "verify_account_enabled": true,
              "verify_account_method": "verify_account_by_rdp",
              "verify_account_params": {},
              "gather_accounts_enabled": true,
              "gather_accounts_method": "gather_accounts_ad_windows",
              "gather_accounts_params": {},
              "remove_account_enabled": true,
              "remove_account_method": "remove_account_ad_windows",
              "remove_account_params": {}
          },
          "protocols": [
              {
                  "name": "rdp",
                  "port": 3389,
                  "primary": true,
                  "required": false,
                  "default": false,
                  "public": true,
                  "setting": {
                      "console": false,
                      "security": "any"
                  }
              },
              {
                  "name": "ssh",
                  "port": 22,
                  "primary": false,
                  "required": false,
                  "default": false,
                  "public": true,
                  "setting": {
                      "sftp_enabled": true,
                      "sftp_home": "/tmp"
                  }
              },
              {
                  "name": "vnc",
                  "port": 5900,
                  "primary": false,
                  "required": false,
                  "default": false,
                  "public": true,
                  "setting": {}
              },
              {
                  "name": "winrm",
                  "port": 5985,
                  "primary": false,
                  "required": false,
                  "default": false,
                  "public": false,
                  "setting": {
                      "use_ssl": false
                  }
              }
          ]
      }
    ]
    """
    platform_model = apps.get_model('assets', 'Platform')
    automation_cls = apps.get_model('assets', 'PlatformAutomation')
    platform_datas = json.loads(data)

    for platform_data in platform_datas:
        AllTypes.create_or_update_by_platform_data(platform_data, platform_cls=platform_model,
                                                   automation_cls=automation_cls)


class Migration(migrations.Migration):
    dependencies = [
        ("assets", "0015_automationexecution_type"),
    ]

    operations = [
        migrations.RunPython(add_ad_host_type),
        migrations.CreateModel(
            name="AD",
            fields=[
                (
                    "asset_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="assets.asset",
                    ),
                ),
                (
                    "domain_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=128,
                        verbose_name="Domain name",
                    ),
                ),
            ],
            options={
                "verbose_name": "Active Directory",
            },
            bases=("assets.asset",),
        ),
        migrations.AddField(
            model_name="platform",
            name="ad",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="ad_platforms",
                to="assets.ad",
                verbose_name="Active Directory",
            ),
        ),
        migrations.AddField(
            model_name="platform",
            name="ad_enabled",
            field=models.BooleanField(default=False, verbose_name="AD enabled"),
        ),
    ]
